// --- Animal Struct and Function ---
println("--- Animal Struct and Function ---")
struct 動物 {
    種類 = "不明",
    長さ = 50,  // Average cat length in cm
    高さ = 25   // Average cat height in cm
}
function 動物を説明する(アニマル) {
    return アニマル.種類 + ": " + to_str(アニマル.長さ) + "x" + to_str(アニマル.高さ) + " cm"
}
let お気に入り = 動物()
お気に入り.種類 = "ネコ"
if (お気に入り.長さ <= 50) {
    println("動物が平均または短い。🐾🐱")
} else {
    println("動物が平均より長い。🐾")
}
println("Animal description:", 動物を説明する(お気に入り))  // Outputs: ネコ: 50x25 cm

// --- Loops with Unicode ---
println("--- Loops with Unicode ---")
let 回数 = 0
while (回数 < 2) {
    println("にゃん #", to_str(回数), "🐾")  // Outputs: にゃん #0🐾, にゃん #1🐾
    回数 = 回数 + 1
}
let 计数 = 0
while (计数 < 3) {
    println("Count:", to_str(计数), "🔄")  // Outputs: Count: 0🔄, Count: 1🔄, Count: 2🔄
    计数 = 计数 + 1
}
for (let 回 = 0; 回 < 3; 回 = 回 + 1) {
    println("Loop count:", to_str(回), "🔢")  // Outputs: Loop count: 0🔢, Loop count: 1🔢, Loop count: 2🔢
}

// --- Unicode and Emoji letiables ---
println("--- Unicode and Emoji letiables ---")
let 挨拶 = "こんにちは"
println("挨拶:", 挨拶)  // Outputs: こんにちは
let 🔢 = 100
println("🔢:", 🔢)     // Outputs: 100
let 💬 = "Emoji!"
println("💬:", 💬)     // Outputs: Emoji!
let 挨拶文 = "Hello, world!"
println("挨拶文:", 挨拶文)  // Outputs: Hello, world!
let 💬2 = "Chat!"
println("💬2:", 💬2)       // Outputs: Chat!

// --- Emoji Structs ---
println("--- Emoji Structs ---")
struct 🐱 {}
let kitty = 🐱()
kitty.name = "Whiskers"
kitty.age = 2
println("Kitty name:", kitty.name)  // Outputs: Whiskers
struct 🐶 { breed = "Labrador", age = 3, color = "Golden" }
let buddy = 🐶()
println("Buddy breed:", buddy.breed)  // Outputs: Labrador
struct 🐰
let thumper = 🐰()
thumper.favoriteFood = "Carrots"
println("Thumper favorite food:", thumper.favoriteFood)  // Outputs: Carrots

// --- Unicode Structs ---
println("--- Unicode Structs ---")
struct 猫 {}
let 子猫 = 猫()
子猫.名前 = "たまちゃん"
子猫.年 = 2
println("子猫名前:", 子猫.名前)  // Outputs: たまちゃん
struct 犬 { 種類 = "ラブラドール", 年 = 3 }
let 犬子 = 犬()
println("犬子種類:", 犬子.種類)  // Outputs: ラブラドール
struct 兎
let 兎子 = 兎()
兎子.好物 = "人参"
println("兎子好物:", 兎子.好物)  // Outputs: 人参

// --- Functions ---
println("--- Functions ---")
function 挨拶する(名) {
    return "こんにちは、" + 名 + "！";
}
let メッセージ = 挨拶する("🙋‍♂️")
println("挨拶する('🙋‍♂️'):", メッセージ)  // Outputs: こんにちは、🙋‍♂️！
function 加える(甲, 乙) {
    return 甲 + 乙
}
let 合計 = 加える(5, 3)
println("加える(5, 3):", 合計)  // Outputs: 8

// --- Boolean and Scope ---
println("--- Boolean and Scope ---")
let 真 = true
let ✅ = false
println("真:", 真)  // Outputs: true
println("✅:", ✅)  // Outputs: false
let 変数 = 10
{
    let 変数 = 20
    println("Inner scope 変数:", to_str(変数), "📦")  // Outputs: 20📦
}
println("Outer scope 変数:", 変数)  // Outputs: 10