// --- Clock Functions ---
println("--- Clock Functions ---")
let time = clock()
let now = clock()
println("Current clock time:", time)  // Outputs: e.g., 1712000000.123
println("Clock time now:", now)       // Outputs: e.g., 1712000000.124

// --- to_str Function Demo ---
println("--- to_str Function Demo ---")
println("to_str(42):", to_str(42))          // Outputs: 42
println("to_str(true):", to_str(true))      // Outputs: true
println("to_str(false):", to_str(false))    // Outputs: false
println("to_str(null):", to_str(null))      // Outputs: null
println("to_str('hello'):", to_str("hello")) // Outputs: hello
println("to_str(clock):", to_str(clock))    // Outputs: <native function>
function test() {
    return "test"
}
println("to_str(test):", to_str(test))      // Outputs: <function test>
struct Test {}
println("to_str(Test):", to_str(Test))      // Outputs: <struct Test>
let inst = Test()
println("to_str(inst):", to_str(inst))      // Outputs: <instance>

// --- Random Functions ---
println("--- Random Functions ---")
let numbers = [1, 2, 3, 4, 5]
println("Original array:", array_to_string(numbers))
shuffle(numbers)
println("Shuffled array:", array_to_string(numbers))
let min = 5
let max = 10
let randNum = random_between(min, max)
printf("Random number between %v and %v: %v\n", min, max, randNum)
let size = 8
let randStr = random_string(size)
printf("Random string of size %v: %v\n", size, randStr)

// --- Output Functions ---
println("--- Output Functions ---")
print("Hello", 42, true)
println("--- Combined Output ---")
println("Single line with number:", 100)
let name = "Alice"
let age = 25
printf("Name: %v, Age: %v\n", name, age)

// --- Input Functions ---
println("--- Input Functions ---")
println("Enter some words (space-separated), then press Enter:")
let words = scan()
println("You entered these words:", array_to_string(words))
println("Enter a sentence, then press Enter:")
let sentence = scanln()
println("You entered this sentence:", sentence)
println("Enter something formatted (e.g., a number or text), then press Enter:")
let formattedInput = scanf("%v")
println("You entered (scanf):", formattedInput)

// --- Formatting Functions ---
println("--- Formatting Functions ---")
let x = 10
let y = 20.5  // Float for flexibility
let formatted = sprintf("Coordinates: (%v, %v)", x, y)
println("Formatted string with sprintf:", formatted)
let errorCode = 404
let errorMsg = errorf("Error %v: Resource not found", errorCode)
println("Error message with errorf:", errorMsg)

// --- File Operations ---
println("--- File Operations ---")
let filename = "test.txt"
let content = "Hello from Seed VM!\nWritten on April 07, 2025."
write_file(filename, content)
println("Wrote content to", filename)
let fileContent = read_file(filename)
println("Read content from", filename, ":", fileContent)

// --- Combined Example ---
println("--- Combined Example ---")
let data = [10, 20, 30, 40, 50]
println("Original data array:", array_to_string(data))
shuffle(data)
println("Shuffled data array:", array_to_string(data))
let dataStr = sprintf("Shuffled data: %v", array_to_string(data))
let dataFile = "shuffled_data.txt"
write_file(dataFile, dataStr)
println("Wrote shuffled data to", dataFile)
let readData = read_file(dataFile)
println("Read from", dataFile, ":", readData)
println("Enter how many random numbers to generate (integer):")
let countInput = scanln()
let count = parse_int(countInput)
if (count < 0) {
    count = 0  // Ensure non-negative
}
let results = []
for (let i = 0; i < count; i = i + 1) {
    push(results, random_between(1, 100))
}
printf("Generated %v random numbers: %v\n", count, array_to_string(results))
